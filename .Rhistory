data("iris")
iris
install.packages("ggplot2")
library(ggplot2)
install.packages("dplyr")
library(dplyr)
iris %>% View
head(iris)
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width)) + geom_point()
table(iris$Species)
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, colour = Species)) + geom_point()
install.packages("caret")
library(caret)
head(iris)
index <- createDataPartition(y = Speicies, p = 0.8)
index <- createDataPartition(y = iris$Speicies, p = 0.8)
jead)iris
iris
head(iris)
index <- createDataPartition(y = iris$Species, p = 0.8)
index
iris[index, ]
iris[index]
index <- createDataPartition(y = iris$Species, p = 0.8, list = FALSE)
iris[index]
iris[index, ]
iris[index, ] %>% nrow
iris[-index, ] %>% nrow
train <- iris[index, ]
test <- iris[-index, ]
test
test
model.rf <- train(Species ~ ., data= train, method="rf")
install.packages("e1071")
model.rf <- train(Species ~ ., data= train, method="rf")
model.rf
head(test)
test[-1, ]
select(test, -Species)
select(test, -Species) %>% head
predict(model.rf,select(test, -Species))
predict(model.rf,select(test, -Species)) == test$Species
table(predict(model.rf,select(test, -Species)), test$Species)
model.rf
model.rf
1391810 + 1382710 * 3 + 2731080
View(iris)
library(ggplot2)
head(iris)
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width )) + geom_point()
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species )) + geom_point()
150000 / 625000
50000 / 625000
37,500 + 247000
37500 + 247000
340,500 + 284500
340500 + 284500
43750 / 62500
43750 / 625000
87500 / 625000
37500 / 625000
125000.625000
125000/625000
43750 / 625000
18750 / 625000
220000/275000
253000 / 340500
34050 * 2
253,000 / 0.8
253000 / 0.8
(316250 - 253000) /2
(316250 - 253000)
247000/ 0.8
253000 / 0.8
247000/ 0.8
316250 + 308750
(308750 - 247000)
61750 / 2
500000 / 0.8
(625000 - 500000)
(625000 - 500000) / 2
125000 + 30875
31625 + 30875
316,250 - 31625
316250 - 31625
308750 - 30875
250 * 120
30000/ 12
31,625 / 12
31625 / 12
36000 * 8
36000 * 8
36000 * 8 + 30000
36000 * 7 + 32000
284000 + 31625
3600 * 0.8
3600 * 6 + 18000 + 15000 + 28800
3600 * 6 + 18000 + 15000 + 28800
(3600 * 6) + 18000 + 15000 + 28800
(36000 * 6) + 18000 + 15000 + 28800
277800 + 31625
salaries <- c(36000, 36000, 36000, 36000, 18000, 15000, 28800, 36000, 24000)
sum(salaries)
265,800 + 31625
265800 + 31625
solaries_new <- c(15000, 28800, 36000, 24000)
sum(salaries_old)
salaries_old <- c(36000, 36000, 36000, 36000, 18000)
solaries_new <- c(15000, 28800, 36000, 24000)
sum(salaries_old)
sum(salaries_old)
salaries_old <- c(36000, 36000, 36000, 36000, 18000)
solaries_new <- c(15000, 28800, 36000, 24000)
sum(salaries_old)
sum(solaries_new)
salaries_old <- c(36000, 36000, 36000, 36000, 18000, 31625)
solaries_new <- c(15000, 28800, 36000, 24000)
sum(salaries_old)
sum(solaries_new)
salaries_old_v <- sum(salaries_old)
salaries_new_v <- sum(solaries_new)
salaries_old_v + salaries_new_v
solaries_new <- c(15000, 28800, 36000, 24000,  31625)
salaries_old_v <- sum(salaries_old)
salaries_new_v <- sum(solaries_new)
salaries_old_v <- sum(salaries_old)
salaries_new_v <- sum(solaries_new)
salaries_old_v
salaries_new_v
salaries_new_v
solaries_new <- c(15000, 28800, 36000, 24000)
salaries_new_v <- sum(solaries_new)
salaries_new_v
316,250 - 297425 +
316250 - 297425 +
316250 - 297425
193625 + 103800 + 10000 + 8825
2500 * 12
163625 + 103800 + 100000 + 8825
163625 + 103800 +  8825
163625 + 103800 + 80000 + 8825
163625 + 103800 + 8000 + 8825
284625- 163625 + 103800 + 10000
284625 - 163625 + 103800 + 10000
284625 - 163625
284625 - 163625 - 103800 - 10000
163625 + 135425 + 10000 + 7200
247000 + 30875
235800 - 18000
217800 + 31625
30000 + 36000 * 3
138000 +  103800 + 10000
30875 + 247000
103800 + 30875
277875 - 138000 - 103800 - 10000
30875 / 12
(30875 / 12) / 2635
30000 + 36000 + 36000 + 15000 + 28800 + 36000 + 24000
30000 + 36000 + 36000 + 36000 + 15000 + 28800 + 36000 + 24000
241800 + 30875
138000 + 134675
277875 - (138000 + 103800 + 10000)
30000 +36000 + 36000 +36000 +18000 +15000 + 28800 + 36000 + 24000
30,000
36,000
36,000
36,000
18,000
31,620
15,000
28,800
36,000
24,000
30000 +
36000 +
36000 +
36000 +
18000 +
31620 +
15000 +
28800 +
36000 +
24000
30000 +
30000 +
36000 +
36000 +
36000 +
36000 +
36000 +
36000 +
18000 +
18000
30000 +
36000 +
36000 +
36000 +
18000
15000 +
28800 +
36000 +
24000
31625 / 12
156000 +
103800 +
10000 +
7205 +
156000 +
103800 +
10000 +
7205
316250 - 31625
156000 +
103800 +
10000 +
7205
284625 - 277005
156000 +
103805 +
17000 +
7825
103800 + 31625
156000 +
135425 +
17000 +
7825
30000 +
36000 +
36000 +
36000
2635 * 12 *0.98
30875 / 12
2572.917 * 12
15000 +
28800 +
36000 +
24000
138000 +
103800 +
30000 +
1500 +
4575
277875 +
30875
install.packages("PerformanceAnalytics")
sample_returns <- c(-0.02, 0.00, 0.00, 0.06, 0.02, 0.03, -0.01, 0.04)
install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
mean.geometric(sample_returns)
mean(sample_returns)
(sample_returns - mean(sample_returns)) / sd(sample_returns)
mean(sample_returns)
mean.geometric(sample_returns)
sd(sample_returns)
(mean(sample_returns) - 0.004) / sd(sample_returns)
setwd("~/GoogleDrive/epopcon")
data <- read.csv("stock_sample.csv")
View(data)
library(ggplot2)
library(dplyr)
library(lubridate)
data <- read.csv("stock_sample.csv")
View(data)
data$REG_DT <- ymd_hms(data$REG_DT)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT)) + geom_point()
head(data)
str(data)
data$label <- as.factor(data$label)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT, color=label)) + geom_point()
data <- read.csv("stock_sample_na.csv")
data$REG_DT <- ymd_hms(data$REG_DT)
data$label <- as.factor(data$label)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT, color=label)) + geom_point()
data
View(data)
data <- read.csv("stock_sample_na.csv")
data$REG_DT <- ymd_hms(data$REG_DT)
data <- read.csv("stock_sample_na.csv")
data
head(data)
data <- read.csv("stock_sample_na.csv")
data$REG_DT <- ymd(data$REG_DT)
data$label <- as.factor(data$label)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT, color=label)) + geom_point()
data
data$STOCK_AMOUNT
install.packages("imputeTS")
library(imputeTS)
na.kalman(data$STOCK_AMOUNT)
data$STOCK_AMOUNT <- na.kalman(data$STOCK_AMOUNT)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT, color=label)) + geom_point()
library(ggplot2)
library(dplyr)
library(lubridate)
library(imputeTS)
data <- read.csv("stock_sample_na.csv")
data$REG_DT <- ymd(data$REG_DT)
data$label <- as.factor(data$label)
data$STOCK_AMOUNT
is.na(data$STOCK_AMOUNT)
data$STOCK_AMOUNT[is.na(data$STOCK_AMOUNT)]
data$label[is.na(data$STOCK_AMOUNT)]
data <- read.csv("stock_sample_na.csv")
data$REG_DT <- ymd(data$REG_DT)
data$label[is.na(data$STOCK_AMOUNT)]
data$label[is.na(data$STOCK_AMOUNT)] <- "NA"
data$label <- as.factor(data$label)
data$STOCK_AMOUNT2 <- na.kalman(data$STOCK_AMOUNT)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
data$STOCK_AMOUNT2 <- na.interpolation(data$STOCK_AMOUNT)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
data$STOCK_AMOUNT2 <- na.seadec(data$STOCK_AMOUNT)
data$STOCK_AMOUNT2 <- na.seasplit(data$STOCK_AMOUNT)
data$STOCK_AMOUNT2 <- na.ma(data$STOCK_AMOUNT)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
data$STOCK_AMOUNT2 <- na.ma(data$STOCK_AMOUNT, weighting = 'exponential')
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
data <- read.csv("stock_sample_na.csv")
data$REG_DT <- ymd(data$REG_DT)
data$label[is.na(data$STOCK_AMOUNT)] <- "NA"
data$label <- as.factor(data$label)
data$STOCK_AMOUNT2 <- na.ma(data$STOCK_AMOUNT, weighting = 'exponential')
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
data$STOCK_AMOUNT2 <- na.kalman(data$STOCK_AMOUNT, weighting = 'exponential')
data$STOCK_AMOUNT2 <- na.kalman(data$STOCK_AMOUNT)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
data$STOCK_AMOUNT2 <- na.random(data$STOCK_AMOUNT)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
data$STOCK_AMOUNT2 <- na.random(data$STOCK_AMOUNT)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
data$STOCK_AMOUNT2 <- na.locf(data$STOCK_AMOUNT)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
data$STOCK_AMOUNT2 <- na.interpolation(data$STOCK_AMOUNT, option = 'stine')
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
library(ggplot2)
library(dplyr)
library(lubridate)
library(imputeTS)
data <- read.csv("stock_sample_na.csv")
data$REG_DT <- ymd(data$REG_DT)
data$label[is.na(data$STOCK_AMOUNT)] <- "NA"
data$label <- as.factor(data$label)
data$STOCK_AMOUNT2 <- na.interpolation(data$STOCK_AMOUNT, option = 'stine')
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
library(ggplot2)
library(dplyr)
library(lubridate)
library(imputeTS)
data <- read.csv("stock_sample_na.csv")
data$REG_DT <- ymd(data$REG_DT)
data$label[is.na(data$STOCK_AMOUNT)] <- "NA"
data$label <- as.factor(data$label)
data$STOCK_AMOUNT2 <- na.interpolation(data$STOCK_AMOUNT, option = 'stine')
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
library(ggplot2)
library(dplyr)
library(lubridate)
library(imputeTS)
data <- read.csv("stock_sample_na.csv")
data$REG_DT <- ymd(data$REG_DT)
data$label[is.na(data$STOCK_AMOUNT)] <- "NA"
data$label <- as.factor(data$label)
data$STOCK_AMOUNT2 <- na.kalman(data$STOCK_AMOUNT)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT2, color=label)) + geom_point()
library(ggplot2)
library(dplyr)
library(lubridate)
library(imputeTS)
data <- read.csv("data/tmp3.csv")
data
Veiw(data)
head(data)
head(data)
names(data)
data <- read.csv("data/tmp3.csv")
head(data)
data <- read.csv("data/tmp3.csv")
head(data)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT)) + geom_point()
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT, color=label)) + geom_point()
data <- factor(data$label)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT, color=label)) + geom_point()
data <- read.csv("data/tmp3.csv")
data <- factor(data$label)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT, color=label)) + geom_point()
head(data)
data <- read.csv("data/tmp3.csv")
data$label <- factor(data$label)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT, color=label)) + geom_point()
data <- read.csv("data/tmp2.csv")
data <- read.csv("data/tmp2.csv")
data
head(data)
head(data)
# head(data)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT, color=label)) + geom_point()
# head(data)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT, color=label)) + geom_point()
data <- read.csv("data/tmp2.csv")
# head(data)
ggplot(data, aes(x=REG_DT, y=STOCK_AMOUNT, color=label)) + geom_point()
